/*
 *    This program is free software; you can redistribute it and/or modify
 *    it under the terms of the GNU General Public License as published by
 *    the Free Software Foundation; either version 2 of the License, or
 *    (at your option) any later version.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    GNU General Public License for more details.
 *
 *    You should have received a copy of the GNU General Public License
 *    along with this program; if not, write to the Free Software
 *    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

/*
 *  
 *    Copyright (C) 2009 - 2011 
 *    							University of West Bohemia, 
 *                  Department of Computer Science and Engineering, 
 *                  Pilsen, Czech Republic
 */
package ch.ethz.origo.jerpa.prezentation.perspective.signalprocess.importdialog;

import java.awt.BorderLayout;
import java.util.ResourceBundle;

import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;

import org.apache.log4j.Logger;

import ch.ethz.origo.jerpa.data.JERPAUtils;
import ch.ethz.origo.jerpa.jerpalang.LangUtils;
import ch.ethz.origo.juigle.application.ILanguage;
import ch.ethz.origo.juigle.application.exception.JUIGLELangException;
import ch.ethz.origo.juigle.application.exception.PerspectiveException;
import ch.ethz.origo.juigle.application.exception.ProjectOperationException;
import ch.ethz.origo.juigle.application.observers.LanguageObservable;
import ch.ethz.origo.juigle.prezentation.JUIGLEGraphicsUtils;

/**
 * Dialog window for import of average
 * 
 * @author Jiri Kucera (jERP Studio)
 * @author Vaclav Souhrada (v.souhrada at gmail.com)
 * @version 1.0.0 (4/26/2011)
 * @since 0.1.0 (3/20/2010)
 * @see ILanguage
 */
public class DialogWindow extends JDialog implements ILanguage {

	/** Only for serialization */
	private static final long serialVersionUID = -7291735764219664878L;
	
	/** Logger for this class */
	private static final Logger logger = Logger.getLogger(DialogWindow.class);
	
	ImportDialogProvider importDialogProvider;
	
	private ResourceBundle resource;
	
	private String resourceBundlePath;

	/**
	 * Creates new form DialogWindow
	 * 
	 * @param importDialogProvider
	 * @param initialPanel
	 * @throws PerspectiveException
	 */
	DialogWindow(ImportDialogProvider importDialogProvider, JPanel initialPanel) throws PerspectiveException {
		this.importDialogProvider = importDialogProvider;
	  // set localized files
		setLocalizedResourceBundle(LangUtils
				.getPerspectiveLangPathProp(LangUtils.SIGNAL_PERSP_LANG_FILE_KEY));
		// attach class as Observer of Language Observable
		LanguageObservable.getInstance().attach(this);
		initComponents();
		dialogPanel.setLayout(new BorderLayout());
		dialogPanel.add(initialPanel, BorderLayout.CENTER);
		setIconImage(JUIGLEGraphicsUtils.getImage(JERPAUtils.IMAGE_PATH
				+ "icon.gif"));
    try {
			updateText();
		} catch (JUIGLELangException e) {
			logger.error(e.getMessage(), e);
			throw new PerspectiveException(e.getMessage(), e);
		}
		this.pack();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// @SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		cancelButton = new javax.swing.JButton();
		nextButton = new javax.swing.JButton();
		backButton = new javax.swing.JButton();
		jSeparator1 = new javax.swing.JSeparator();
		dialogPanel = new javax.swing.JPanel();

		setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
		addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent evt) {
				formWindowClosing(evt);
			}
		});

		cancelButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				cancelButtonActionPerformed(evt);
			}
		});

		nextButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				nextButtonActionPerformed(evt);
			}
		});

		backButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				backButtonActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout dialogPanelLayout = new javax.swing.GroupLayout(
				dialogPanel);
		dialogPanel.setLayout(dialogPanelLayout);
		dialogPanelLayout.setHorizontalGroup(dialogPanelLayout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 423,
				Short.MAX_VALUE));
		dialogPanelLayout.setVerticalGroup(dialogPanelLayout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 294,
				Short.MAX_VALUE));

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout
				.setHorizontalGroup(layout
						.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								javax.swing.GroupLayout.Alignment.TRAILING,
								layout
										.createSequentialGroup()
										.addContainerGap()
										.addGroup(
												layout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.TRAILING)
														.addComponent(dialogPanel,
																javax.swing.GroupLayout.Alignment.LEADING,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																Short.MAX_VALUE)
														.addGroup(
																layout
																		.createSequentialGroup()
																		.addComponent(backButton)
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																		.addComponent(nextButton)
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																		.addComponent(cancelButton)).addComponent(
																jSeparator1,
																javax.swing.GroupLayout.Alignment.LEADING,
																javax.swing.GroupLayout.DEFAULT_SIZE, 423,
																Short.MAX_VALUE)).addContainerGap()));
		layout.setVerticalGroup(layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				javax.swing.GroupLayout.Alignment.TRAILING,
				layout.createSequentialGroup().addContainerGap().addComponent(
						dialogPanel, javax.swing.GroupLayout.DEFAULT_SIZE,
						javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGap(18,
						18, 18).addComponent(jSeparator1,
						javax.swing.GroupLayout.PREFERRED_SIZE, 10,
						javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(
						javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(
								layout.createParallelGroup(
										javax.swing.GroupLayout.Alignment.BASELINE).addComponent(
										cancelButton).addComponent(nextButton).addComponent(
										backButton)).addContainerGap()));

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void formWindowClosing(java.awt.event.WindowEvent evt) {// GEN-FIRST:event_formWindowClosing
		importDialogProvider.closeImportDialog();
	}// GEN-LAST:event_formWindowClosing

	private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cancelButtonActionPerformed
		importDialogProvider.closeImportDialog();
	}// GEN-LAST:event_cancelButtonActionPerformed

	private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_backButtonActionPerformed
		try {
			importDialogProvider.setDialogState(ImportDialogProvider.BUTTON_BACK);
		} catch (ProjectOperationException e) {
			logger.error(e.getMessage(), e);
		}
		importDialogProvider.setDialogContent();
	}// GEN-LAST:event_backButtonActionPerformed

	private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_nextButtonActionPerformed
		importDialogProvider.commitChanges();
		try {
			importDialogProvider.setDialogState(ImportDialogProvider.BUTTON_NEXT);
		} catch (ProjectOperationException e) {
			logger.error(e.getMessage(), e);
		}
		importDialogProvider.setDialogContent();
	}// GEN-LAST:event_nextButtonActionPerformed

	// Variables declaration - do not modify//GEN-BEGIN:variables
	protected javax.swing.JButton backButton;
	private javax.swing.JButton cancelButton;
	protected javax.swing.JPanel dialogPanel;
	private javax.swing.JSeparator jSeparator1;
	protected javax.swing.JButton nextButton;
	// End of variables declaration//GEN-END:variables

	@Override
	public String getResourceBundlePath() {
		return resourceBundlePath;
	}

	@Override
	public void setLocalizedResourceBundle(String path) {
		this.resourceBundlePath = path;
		resource = ResourceBundle.getBundle(path);
	}

	/**
	 * NOT IMPLEMENTED FOR THIS CLASS
	 */
	@Override
	public void setResourceBundleKey(String key) {
		// NOT IMPLEMENTED FOR THIS CLASS
	}

	@Override
	public void updateText() throws JUIGLELangException {
		SwingUtilities.invokeLater(new Runnable() {
			
			@Override
			public void run() {
				setTitle(resource.getString("sp.diag.import.title"));
				cancelButton.setText(resource.getString("sp.diag.import.button.cancel"));
				nextButton.setText(resource.getString("sp.diag.import.button.next"));
				backButton.setText(resource.getString("sp.diag.import.button.back"));
			}
		});
	}
}
